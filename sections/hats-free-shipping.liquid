{% schema %}
{
  "name": "Free Shipping",
  "settings": [
    {
      "type": "text",
      "id": "text_free_shipping",
      "label": "Texte Ã  afficher",
      "default": "Free Shipping at"
    },
    {
      "type": "number",
      "id": "price_free_shipping",
      "label": "Prix de la livraison gratuite",
      "default": 55
    },
    {
      "type": "color",
      "id": "color",
      "label": "Couleur du texte",
      "default": "#EFBA19"
    }
  ],
  "presets": [
    {
      "name": "Free Shipping"
    }
  ]
}
{% endschema %}

<section id="hats_free_shipping">
  <span id="free_shipping_message" class="text">
    <div>
      Tu es Ã  <span class="color">{{ section.settings.price_free_shipping }}.00â‚¬</span> de la
      <span class="color">livraison gratuite</span> {{ section.settings.text_free_shipping }}.
    </div>
  </span>
</section>

<script>

document.addEventListener("DOMContentLoaded", function() {
    // SÃ©lectionnez l'Ã©lÃ©ment que vous souhaitez dÃ©placer
    var hatsFreeShipping = document.getElementById('hats_free_shipping');
    
    // SÃ©lectionnez la destination (en-tÃªte)
    var sectionHeader = document.querySelector('.section-header');
    
    // DÃ©placez l'Ã©lÃ©ment en premier
    if (hatsFreeShipping && sectionHeader) {
        sectionHeader.insertBefore(hatsFreeShipping, sectionHeader.firstChild);
    }
});
// Fonction pour mettre Ã  jour le message de livraison gratuite
function updateFreeShippingMessage() {
  fetch('/cart.js')
    .then(response => response.json())
    .then(cart => {
      const threshold = {{ section.settings.price_free_shipping | json }};
      const total = cart.total_price / 100; // total_price est en cents
      const amountNeeded = (threshold - total).toFixed(2);

      const messageElement = document.getElementById('free_shipping_message');

      if (total >= threshold) {
        messageElement.innerHTML = `
          <div class="free">FÃ©licitations ðŸŽ‰ðŸŽ‰ ! Vous avez droit Ã  la <span class="color">livraison gratuite</span> {{ section.settings.text_free_shipping }}.</div>`;
      } else {
        messageElement.innerHTML = `
          <div>Tu es Ã  <span class="color">${amountNeeded}â‚¬</span> de la <span class="color">livraison gratuite</span> {{ section.settings.text_free_shipping }}.</div>`;
      }
    })
    .catch(error => console.error('Erreur lors de la rÃ©cupÃ©ration du panier:', error));
}

// Mettre Ã  jour le message au chargement de la page
document.addEventListener('DOMContentLoaded', updateFreeShippingMessage);

// Fonction pour Ã©mettre un Ã©vÃ©nement lorsque le panier est mis Ã  jour
function triggerCartUpdateEvent() {
  const event = new Event('cart:updated');
  document.dispatchEvent(event);
}

// Ã‰couter les ajouts au panier et dÃ©clencher l'Ã©vÃ©nement
document.addEventListener('submit', function(event) {
  const form = event.target;
  if (form && form.action.includes('/cart/add')) {
    event.preventDefault(); // EmpÃªcher la soumission du formulaire par dÃ©faut

    const formData = new FormData(form);

    fetch('/cart/add.js', {
      method: 'POST',
      body: formData,
      headers: {
        'Accept': 'application/json'
      }
    })
    .then(response => response.json())
    .then(() => {
      triggerCartUpdateEvent();
    })
    .catch(error => console.error('Erreur lors de lâ€™ajout au panier:', error));
  }
});

// Ã‰couter les Ã©vÃ©nements de modification des quantitÃ©s du panier
document.addEventListener('click', function(event) {
  if (event.target.classList.contains('quantity__button')) {
    setTimeout(() => {
      updateFreeShippingMessage();
    }, 1000); // Attendre un court instant pour permettre Ã  l'API d'actualiser le panier
  }
});

document.addEventListener('click', function(event) {
  if (event.target.classList.contains('cart-remove-button')) {
    setTimeout(() => {
      updateFreeShippingMessage();
    }, 1000); // Attendre un court instant pour permettre Ã  l'API d'actualiser le panier
  }
});


// Ã‰couter les changements dans les champs de saisie de quantitÃ©
document.addEventListener('change', function(event) {
  if (event.target.classList.contains('quantity__input')) {
    setTimeout(() => {
      updateFreeShippingMessage();
    }, 1000); // Attendre un court instant pour permettre Ã  l'API d'actualiser le panier
  }
});

// Mettre Ã  jour le message lorsqu'un produit est retirÃ© du panier (si applicable)
document.addEventListener('cart:updated', updateFreeShippingMessage);
</script>

<style>
  #hats_free_shipping .color{
    color: {{ section.settings.color }};
  }
</style>
